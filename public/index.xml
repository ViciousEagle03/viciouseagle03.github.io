<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Piyush Sharma</title>
    <link>https://viciouseagle03.github.io/</link>
    <description>Recent content on Piyush Sharma</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 23 Jun 2024 12:49:36 +0530</lastBuildDate>
    <atom:link href="https://viciouseagle03.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GSoC [Week 02-03] Progress</title>
      <link>https://viciouseagle03.github.io/post/week-02-03-progress/</link>
      <pubDate>Sun, 23 Jun 2024 12:49:36 +0530</pubDate>
      <guid>https://viciouseagle03.github.io/post/week-02-03-progress/</guid>
      <description>&lt;p&gt;This blog post covers all the work done in the second and third week of Google Summer of Code.&lt;/p&gt;&#xA;&lt;p&gt;In the past weeks, my focus has been on enhancing the serialization support of NDCube by extending its support for ExtraCoords and GlobalCoords. After establishing serialization support for the fundamental attributes of the NDCube object—such as data and wcs—in the ASDF file format, the next logical step was extending this capability to include &lt;code&gt;ExtraCoords&lt;/code&gt; and &lt;code&gt;GlobalCoords&lt;/code&gt; object.&lt;/p&gt;&#xA;&lt;h2 id=&#34;globalcoords-and-extracoords&#34;&gt;GlobalCoords and ExtraCoords&lt;/h2&gt;&#xA;&lt;p&gt;ExtraCoords: The ExtraCoords attribute expand NDCube&amp;rsquo;s capabilities by incorporating additional spatial or spectral coordinates beyond those defined by the primary WCS. It accommodate complex datasets needing extra dimensions or coordinates, such as spectroscopic data with folded axes.&lt;/p&gt;&#xA;&lt;p&gt;GlobalCoords: The GlobalCoords attribute are coordinates in an NDCube that provides universal context across the entire dataset and apply uniformly across all axes. It captures metadata such as observation times or global positional coordinates of the NDCube object.&lt;/p&gt;&#xA;&lt;h2 id=&#34;extending-the-serialization-support&#34;&gt;Extending the Serialization support&lt;/h2&gt;&#xA;&lt;p&gt;Now, &lt;code&gt;ExtraCoords&lt;/code&gt; can be initialized by specifying a &lt;code&gt;BaseLowLevelWCS&lt;/code&gt; object and a mapping, or by building it up using one or more lookup tables. To support the latter method, I had to ensure the &lt;code&gt;lookup_tables&lt;/code&gt; were properly preserved during serialization. For this purpose, I designed the schema and wrote the converter class for the following objects:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ndcube.extra_coords.extra_coords.ExtraCoords&lt;/li&gt;&#xA;&lt;li&gt;ndcube.extra_coords.table_coord.TimeTableCoordinate&lt;/li&gt;&#xA;&lt;li&gt;ndcube.extra_coords.table_coord.QuantityTableCoordinate&lt;/li&gt;&#xA;&lt;li&gt;ndcube.extra_coords.table_coord.SkyCoordTableCoordinate&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The initialization of &lt;code&gt;GlobalCoords&lt;/code&gt; is more straightforward, which required me to design the schema and write the converter class for the following object:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ndcube.global_coords.GlobalCoords&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Here&amp;rsquo;s an example of the &lt;code&gt;ExtraCoords&lt;/code&gt; Schema&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;%YAML 1.1&#xA;---&#xA;$schema: &amp;#34;http://stsci.edu/schemas/yaml-schema/draft-01&amp;#34;&#xA;id: &amp;#34;asdf://sunpy.org/ndcube/schemas/extra_coords-0.1.0&amp;#34;&#xA;&#xA;title:&#xA;Represents the ndcube ExtraCoords object&#xA;&#xA;description:&#xA;Represents the ndcube ExtraCoords object&#xA;&#xA;type: object&#xA;properties:&#xA;wcs:&#xA;    tag: &amp;#34;tag:stsci.edu:gwcs/wcs-1.*&amp;#34;&#xA;mapping:&#xA;    type: array&#xA;lookup_tables:&#xA;    type: array&#xA;    items:&#xA;        type: array&#xA;        items:&#xA;            - oneOf:&#xA;            - type: number&#xA;            - type: array&#xA;            - oneOf:&#xA;            - tag: &amp;#34;tag:sunpy.org:ndcube/extra_coords/table_coord/quantitytablecoordinate-0.*&amp;#34;&#xA;            - tag: &amp;#34;tag:sunpy.org:ndcube/extra_coords/table_coord/skycoordtablecoordinate-0.*&amp;#34;&#xA;            - tag: &amp;#34;tag:sunpy.org:ndcube/extra_coords/table_coord/timetablecoordinate-0.*&amp;#34;&#xA;dropped_tables:&#xA;    type: array&#xA;ndcube:&#xA;    tag: &amp;#34;tag:sunpy.org:ndcube/ndcube/ndcube-0.*&amp;#34;&#xA;&#xA;required: [ndcube]&#xA;additionalProperties: false&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;whats-new-keeping-up-with-the-coords&#34;&gt;What&amp;rsquo;s new: Keeping Up with the Coords&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://viciouseagle03.github.io/images/ASDF-ser-new-type.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Now, when we save an NDCube object to an ASDF file, the file successfully stores the &lt;code&gt;ExtraCoords&lt;/code&gt; and &lt;code&gt;GlobalCoords&lt;/code&gt; information, which is preserved when we deserialize and generate a new NDCube object by reading the file. The only thing that is still not supported is initializing an ExtraCoords object using a mapping and an &lt;code&gt;astropy.wcs.WCS&lt;/code&gt; object. This feature will be supported in the future when I implement serialization support for &lt;code&gt;astropy.wcs.WCS&lt;/code&gt; in the asdf-astropy library.&lt;/p&gt;&#xA;&lt;h4 id=&#34;saving-an-ndcube-with-globalcoords-and-extracoords-attribute&#34;&gt;Saving an NDCube with &lt;code&gt;GlobalCoords&lt;/code&gt; and &lt;code&gt;ExtraCoords&lt;/code&gt; attribute&lt;/h4&gt;&#xA;&lt;pre&gt;&lt;code&gt;with asdf.open(&#39;ndcubeglobal_extra.asdf&#39;) as af:&#xA;    ndcube2 = af.tree[&#39;ndcube&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h4 id=&#34;the-relevant-asdf-file-block&#34;&gt;The relevant ASDF file block&lt;/h4&gt;&#xA;&lt;pre&gt;&lt;code&gt;extra_coords: !&amp;lt;tag:sunpy.org:ndcube/extra_coords/extra_coords/extracoords-0.1.0&amp;gt;&#xA;    dropped_tables: []&#xA;    lookup_tables:&#xA;    - - 0&#xA;    - !&amp;lt;tag:sunpy.org:ndcube/extra_coords/table_coord/timetablecoordinate-0.1.0&amp;gt;&#xA;        mesh: false&#xA;        names: [time]&#xA;        reference_time: !time/time-1.1.0 {base_format: fits, value: &#39;2000-01-01T00:00:00.000&#39;}&#xA;        table: !time/time-1.1.0&#xA;        base_format: fits&#xA;        value: !core/ndarray-1.0.0&#xA;            byteorder: little&#xA;            datatype: [ucs4, 23]&#xA;            shape: [10]&#xA;            source: 5&#xA;    - - 0&#xA;    - !&amp;lt;tag:sunpy.org:ndcube/extra_coords/table_coord/skycoordtablecoordinate-0.1.0&amp;gt;&#xA;        mesh: false&#xA;        names: [lon, lat]&#xA;        table: !&amp;lt;tag:astropy.org:astropy/coordinates/skycoord-1.0.0&amp;gt;&#xA;        dec: !&amp;lt;tag:astropy.org:astropy/coordinates/latitude-1.0.0&amp;gt;&#xA;            unit: !unit/unit-1.0.0 deg&#xA;            value: !core/ndarray-1.0.0&#xA;            byteorder: little&#xA;            datatype: float64&#xA;            shape: [10]&#xA;            source: 7&#xA;        frame: icrs&#xA;        ra: !&amp;lt;tag:astropy.org:astropy/coordinates/longitude-1.0.0&amp;gt;&#xA;            unit: !unit/unit-1.0.0 deg&#xA;            value: !core/ndarray-1.0.0&#xA;            byteorder: little&#xA;            datatype: float64&#xA;            shape: [10]&#xA;            source: 6&#xA;            wrap_angle: !&amp;lt;tag:astropy.org:astropy/coordinates/angle-1.0.0&amp;gt; {datatype: float64,&#xA;            unit: !unit/unit-1.0.0 deg, value: 360.0}&#xA;        representation_type: spherical&#xA;    - - 1&#xA;    - !&amp;lt;tag:sunpy.org:ndcube/extra_coords/table_coord/quantitytablecoordinate-0.1.0&amp;gt;&#xA;        mesh: true&#xA;        names: [exposure_time]&#xA;        table:&#xA;        - !unit/quantity-1.1.0&#xA;        unit: !unit/unit-1.0.0 s&#xA;        value: !core/ndarray-1.0.0&#xA;            byteorder: little&#xA;            datatype: float64&#xA;            shape: [10]&#xA;            source: 8&#xA;        unit: !unit/unit-1.0.0 s&#xA;    ndcube: *id001&#xA;global_coords: !&amp;lt;tag:sunpy.org:ndcube/global_coords/globalcoords-0.1.0&amp;gt;&#xA;    internal_coords:&#xA;    name1:&#xA;    - custom:physical_type1&#xA;    - !unit/quantity-1.1.0 {datatype: float64, unit: !unit/unit-1.0.0 m, value: 1.0}&#xA;    name2:&#xA;    - custom:physical_type2&#xA;    - !unit/quantity-1.1.0 {datatype: float64, unit: !unit/unit-1.0.0 s, value: 2.0}&#xA;    ndcube: *id001&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;During my coding period my mentors were incredibly helpful and huge thanks to &lt;a href=&#34;https://github.com/braingram&#34;&gt;@braingram&lt;/a&gt; for explaining and ensuring I understood the entire ASDF serialization process thoroughly. I learned a lot about schema design and JSON schema. I was particularly impressed by the &lt;a href=&#34;https://docs.github.com/en/actions/using-workflows&#34;&gt;CI workflows&lt;/a&gt;, when I set up a dedicated schema testing workflow. It showed me how automated testing can catch errors that manual testing might overlook. Although I implemented a straightforward workflow, it go me curious about learning more about CI workflows.&lt;/p&gt;&#xA;&lt;p&gt;I am currently adding tests for the new serialization support in NDCube, which I plan to finish by the next coding week.&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>Community Bonding and Week 01 Progress</title>
      <link>https://viciouseagle03.github.io/post/community-bonding-and-week-01/</link>
      <pubDate>Sat, 08 Jun 2024 02:15:27 +0530</pubDate>
      <guid>https://viciouseagle03.github.io/post/community-bonding-and-week-01/</guid>
      <description>&lt;p&gt;This post documents the planning of the project, my learnings during the community bonding period, and the tasks I completed in my first week.&lt;/p&gt;&#xA;&lt;h2 id=&#34;community-bonding-period&#34;&gt;Community Bonding Period&lt;/h2&gt;&#xA;&lt;p&gt;After the euphoria of being accepted into GSoC faded, it was time for setting up my workspace and diving back into the codebase after a month. Planning out the project was key, and meeting with my mentors was a big part of that. I was excited for this chat because the mentors had been super helpful and easy to reach during the proposal stage.&lt;/p&gt;&#xA;&lt;h2 id=&#34;setting-the-stage-mentor-meet-up-and-project-planning&#34;&gt;Setting the Stage: Mentor Meet-Up and Project Planning&lt;/h2&gt;&#xA;&lt;p&gt;During the meet-up, we discussed about the best approach to kick-start the development process. It was mostly the mentors discussing about the possible roadmap and as they outlined the project roadmap, I listened carefully, taking notes on important discussions. One of the key decision was to set up clear communication channels and workflows to make sure we all stay on the same page and to ensure I do not vary off of the project or get stuck in a deadend.&lt;/p&gt;&#xA;&lt;p&gt;Additionally, we agreed to use GitHub projects for project management, making it easier to keep track of tasks and monitor progress. You can check out the GitHub project here: &lt;a href=&#34;https://github.com/orgs/sunpy/projects/12/views/1&#34;&gt;&lt;strong&gt;Github Project&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Apart from discussing the project proceedings, I was also tasked with setting up a blog website to document my GSoC journey and share updates with the community. I decided to use Hugo to create the blog website and deployed it through GitHub pages. Additionally, I was asked to share the RSS feed of my blog to ensure that project updates are easily accessible to everyone.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://viciouseagle03.github.io/images/tasks.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;week-01-first-coding-week&#34;&gt;Week [01]: First Coding Week&lt;/h1&gt;&#xA;&lt;h2 id=&#34;a-brief-overview-about-my-project&#34;&gt;A brief overview about my project&lt;/h2&gt;&#xA;&lt;p&gt;My projects aims to enable the storage and retrieval of NDCube objects using the ASDF file format. Currently, ndcube lacks native support for saving NDCube objects to files and loading them back, limiting its usability. To address this, the project will implement convertors and schema definitions for NDCube objects and related classes ensuring robust serialization and deserialiazation. The first phase of my project requires the complete imlementation of serialization of an &lt;strong&gt;ndcube.NDCube&lt;/strong&gt; object when &lt;code&gt;.data&lt;/code&gt; is a numpy array and &lt;code&gt;.wcs&lt;/code&gt; is a &lt;strong&gt;gwcs.WCS object&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;the-prototype&#34;&gt;The Prototype&lt;/h2&gt;&#xA;&lt;p&gt;In our meeting, we discussed the initial steps,  which centered around laying the groundwork for serialization support for the NDCube object, particularly focusing on establishing basic functionality. This included implementing the convertor class, registering the convertors as ASDF extensions, and ensuring they were readily available via entry points. Getting a good grasp of the whole serialization process took some dedicated reading through the ASDF docs 🧐.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Convertor Class: I implemented the convertor class, including the &lt;code&gt;to_yaml_tree&lt;/code&gt; and &lt;code&gt;from_yaml_tree&lt;/code&gt; methods. The former converts NDCube object attributes into a single node object suitable for serialization. Now, here&amp;rsquo;s the super cool part the &lt;code&gt;.wcs&lt;/code&gt; attribute of the NDCube object, being a complex object, is accommodated within the node, as the node is permitted to contain nested complex objects.&#xA;&lt;em&gt;Viola!&lt;/em&gt;, so I was able to leverage the existing convertor for GWCS objects which made the process somewhat less complicated. The latter method is exactly the opposite, it accepts a single node object from parsed YAML and returns the corresponding NDCube object.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Schema and Manifests: The Schema was designed to validate the presence, and the datatype of the validator properties for the NDCube object. The manifest was implemented for acheiving the resource mapping of the schema.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;ASDF Integration: In entry_point.py, I&amp;rsquo;ve implemented get_resource_mapping to retrieve mappings for schema and manifest files, required for ASDF file validation and identifying NDCube objects and the get_extension is implemented to retrieve extensions , here the extension through which the ndcube convertor was registered&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;code-demonstration&#34;&gt;Code Demonstration&lt;/h2&gt;&#xA;&lt;h3 id=&#34;ndcube-initialised-with-gwcswcs-object-as-its-wcs-attribute&#34;&gt;NDCube initialised with gwcs.WCS object as its &amp;lsquo;.wcs&amp;rsquo; attribute&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;pre&gt;&lt;code&gt;import numpy as np&#xA;import asdf&#xA;from astropy.time import Time&#xA;from ndcube import NDCube&#xA;from ndcube.extra_coords import QuantityTableCoordinate, TimeTableCoordinate&#xA;import astropy.units as u&#xA;&#xA;&#xA;energy = np.arange(10) * u.keV&#xA;time = Time(&#39;2020-01-01 00:00:00&#39;) + np.arange(10) * u.s&#xA;energy_coord = QuantityTableCoordinate(energy, names=&#39;energy&#39;, physical_types=&#39;em.energy&#39;)&#xA;time_coord = TimeTableCoordinate(time, names=&#39;time&#39;, physical_types=&#39;time&#39;)&#xA;&#xA;# Initialize the GWCS object&#xA;wcs = (time_coord &amp;amp; energy_coord).wcs&#xA;data = np.random.rand(len(time), len(energy))&#xA;&#xA;# Initialize the NDCube&#xA;ndcube = NDCube(data, wcs=wcs)&#xA;&#xA;with asdf.AsdfFile() as af:&#xA;    af.tree[&#39;ndcube&#39;] = ndcube&#xA;    af.write_to(&#39;ndcube.asdf&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h3 id=&#34;serialized-asdf-file&#34;&gt;Serialized ASDF File&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#ASDF 1.0.0&#xA;#ASDF_STANDARD 1.5.0&#xA;%YAML 1.1&#xA;%TAG ! tag:stsci.edu:asdf/&#xA;--- !core/asdf-1.1.0&#xA;asdf_library: !core/software-1.0.0 {author: The ASDF Developers, homepage: &amp;#39;http://github.com/asdf-format/asdf&amp;#39;,&#xA;  name: asdf, version: 3.0.1}&#xA;history:&#xA;  extensions:&#xA;  - !core/extension_metadata-1.0.0&#xA;    extension_class: asdf.extension._manifest.ManifestExtension&#xA;    extension_uri: asdf://asdf-format.org/core/extensions/core-1.5.0&#xA;    software: !core/software-1.0.0 {name: asdf, version: 3.0.1}&#xA;  - !core/extension_metadata-1.0.0&#xA;    extension_class: asdf.extension._manifest.ManifestExtension&#xA;    extension_uri: asdf://sunpy.org/extensions/ndcube-0.1.0&#xA;    software: !core/software-1.0.0 {name: ndcube, version: 2.3.dev224+g04409b5.d20240605}&#xA;  - !core/extension_metadata-1.0.0&#xA;    extension_class: asdf_astropy._manifest.CompoundManifestExtension&#xA;    extension_uri: asdf://astropy.org/core/extensions/core-1.5.0&#xA;    software: !core/software-1.0.0 {name: asdf-astropy, version: 0.5.0}&#xA;  - !core/extension_metadata-1.0.0&#xA;    extension_class: asdf.extension._manifest.ManifestExtension&#xA;    extension_uri: asdf://asdf-format.org/transform/extensions/transform-1.5.0&#xA;    software: !core/software-1.0.0 {name: asdf-astropy, version: 0.5.0}&#xA;  - !core/extension_metadata-1.0.0&#xA;    extension_class: asdf.extension._manifest.ManifestExtension&#xA;    extension_uri: asdf://asdf-format.org/astronomy/gwcs/extensions/gwcs-1.2.0&#xA;    software: !core/software-1.0.0 {name: gwcs, version: 0.20.0}&#xA;ndcube: &amp;amp;id001 !&amp;lt;tag:sunpy.org:ndcube/ndcube/NDCube-0.1.0&amp;gt;&#xA;  data: !core/ndarray-1.0.0&#xA;    source: 0&#xA;    datatype: float64&#xA;    byteorder: little&#xA;    shape: [10, 10]&#xA;  extra_coords: !&amp;lt;tag:sunpy.org:ndcube/extra_coords/extra_coords/ExtraCoords-0.1.0&amp;gt;&#xA;    dropped_tables: []&#xA;    ndcube: *id001&#xA;  wcs: !&amp;lt;tag:stsci.edu:gwcs/wcs-1.2.0&amp;gt;&#xA;    name: &amp;#39;&amp;#39;&#xA;    pixel_shape: null&#xA;    steps:&#xA;    - !&amp;lt;tag:stsci.edu:gwcs/step-1.1.0&amp;gt;&#xA;      frame: !&amp;lt;tag:stsci.edu:gwcs/frame-1.0.0&amp;gt;&#xA;        axes_names: [&amp;#39;&amp;#39;, &amp;#39;&amp;#39;]&#xA;        axes_order: [0, 1]&#xA;        axes_type: [PIXEL, PIXEL]&#xA;        axis_physical_types: [&amp;#39;custom:PIXEL&amp;#39;, &amp;#39;custom:PIXEL&amp;#39;]&#xA;        name: PixelFrame&#xA;        naxes: 2&#xA;        unit: [!unit/unit-1.0.0 pixel, !unit/unit-1.0.0 pixel]&#xA;      transform: !transform/concatenate-1.2.0&#xA;        forward:&#xA;        - !transform/tabular-1.2.0&#xA;          bounds_error: false&#xA;          fill_value: .nan&#xA;          inputs: [x]&#xA;          lookup_table: !unit/quantity-1.1.0&#xA;            unit: !unit/unit-1.0.0 s&#xA;            value: !core/ndarray-1.0.0&#xA;              source: 1&#xA;              datatype: float64&#xA;              byteorder: little&#xA;              shape: [10]&#xA;          method: linear&#xA;          outputs: [y]&#xA;          points:&#xA;          - !unit/quantity-1.1.0&#xA;            unit: !unit/unit-1.0.0 pixel&#xA;            value: !core/ndarray-1.0.0&#xA;              source: 2&#xA;              datatype: float64&#xA;              byteorder: little&#xA;              shape: [10]&#xA;        - !transform/tabular-1.2.0&#xA;          bounds_error: false&#xA;          fill_value: .nan&#xA;          inputs: [x]&#xA;          lookup_table: !unit/quantity-1.1.0&#xA;            unit: !unit/unit-1.0.0 keV&#xA;            value: !core/ndarray-1.0.0&#xA;              source: 3&#xA;              datatype: float64&#xA;              byteorder: little&#xA;              shape: [10]&#xA;          method: linear&#xA;          outputs: [y]&#xA;          points:&#xA;          - !unit/quantity-1.1.0&#xA;            unit: !unit/unit-1.0.0 pixel&#xA;            value: !core/ndarray-1.0.0&#xA;              source: 4&#xA;              datatype: float64&#xA;              byteorder: little&#xA;              shape: [10]&#xA;        inputs: [x0, x1]&#xA;        outputs: [y0, y1]&#xA;    - !&amp;lt;tag:stsci.edu:gwcs/step-1.1.0&amp;gt;&#xA;      frame: !&amp;lt;tag:stsci.edu:gwcs/composite_frame-1.0.0&amp;gt;&#xA;        frames:&#xA;        - !&amp;lt;tag:stsci.edu:gwcs/temporal_frame-1.0.0&amp;gt;&#xA;          axes_names: [time]&#xA;          axes_order: [0]&#xA;          axis_physical_types: [time]&#xA;          name: TemporalFrame&#xA;          reference_frame: !time/time-1.1.0 2020-01-01 00:00:00.000&#xA;          unit: [!unit/unit-1.0.0 s]&#xA;        - !&amp;lt;tag:stsci.edu:gwcs/frame-1.0.0&amp;gt;&#xA;          axes_names: [energy]&#xA;          axes_order: [1]&#xA;          axes_type: [CUSTOM]&#xA;          axis_physical_types: [em.energy]&#xA;          name: CoordinateFrame&#xA;          naxes: 1&#xA;          unit: [!unit/unit-1.0.0 keV]&#xA;        name: CompositeFrame&#xA;      transform: null&#xA;...&#xA;�BLK0   [TY*ߝ��R�4p}Q����?��#���?ȩȏ��?���#��?��ҩ��?*B��y�?ʱ�tv��?������?�fEp�X�?k1^}��?=���A�?�]����?&#xA;�֜���?���H�?��)9�?{juoPW�?p�:����?0�T9��?w�A��?pWݫ&#x9;%�?�K#)cB�?�uv����?V����?���^�.�?��2���?���eQ�?^߁}���?�$6mwp�?�&amp;amp;�&amp;#34;��?N�;�[�?4�؅J3�?&#xA;����?=&amp;gt;��ܨ?��#%�?J6F=s��?E��}.�?°���&#xA;�?����Qa�?;��0�?vM���?q��ǖ&amp;#39;�?�&amp;lt;5��?G]�X�?��.���?��ɐ?�?j��G�L�?&amp;lt;��&amp;amp;��?��q];I?�̱���?X�Dt�v�?Pҧ���?0�=�E��?����?O&amp;gt;&amp;gt;tGj?D.���#�?p�N����?,$�V)��?j��xƦ�?�v�h�?�&amp;#34;�&#xA;�p�?7S�0�?���ۢ`�?8YI�yְ?&amp;#34;E��o��?J�G�8�?�W�����?����ـ�?t���o�?sg���?h�Ȝ���?�)�=g�?e/B/�?�2�;�?�~�xT��?s�S���?t�|1.��?�n��ʳ?��/�؛�?jd����?�oB���?Lz09��?�����?��ga��?`������?���kW��?���P7�?�|�F@�?Oq���?d���$�?&amp;gt;�e�~�?�t�(�?�Ԓ���?&amp;lt;�P����?���a�?�Q΢���?����?Ѳ�#[[�?� �^�X�?jC�����?�mJA��?�BLK0PPP?�N��{I�?N&amp;#34;F98��?`������? @�&#x9;@h�����@ @������@x�����@&amp;#34;@�BLK0PPP�����Z&#xA;�η~�ZH�?@@@@@@ @&amp;#34;@�BLK0PPP�����Z&#xA;�η~�ZH�?@@@@@@ @&amp;#34;@�BLK0PPP�����Z&#xA;�η~�ZH�?@@@@@@ @&amp;#34;@#ASDF BLOCK INDEX&#xA;%YAML 1.1&#xA;---&#xA;- 4304&#xA;- 5158&#xA;- 5292&#xA;- 5426&#xA;- 5560&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;gsoc-week-one-reflections&#34;&gt;GSoC Week One: Reflections&lt;/h2&gt;&#xA;&lt;p&gt;My first week with GSoC has been a thrilling ride, full of learning and growth. The support from the community has been incredible. Looking forward to what lies ahead!🚀&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Perseverance is not a long race; it is many short races one after the other.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;</description>
    </item>
    <item>
      <title>Getting Selected for Google Summer of Code 2024</title>
      <link>https://viciouseagle03.github.io/post/getting-selected-for-gsoc_2024/</link>
      <pubDate>Fri, 07 Jun 2024 16:11:56 +0530</pubDate>
      <guid>https://viciouseagle03.github.io/post/getting-selected-for-gsoc_2024/</guid>
      <description>&lt;p&gt;Hello everyone, this marks my first blog post where I pen down my experience and learnings about getting selected for Google Summer of Code.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-is-this-series-about&#34;&gt;What is this series about?&lt;/h2&gt;&#xA;&lt;p&gt;In this series of blog posts, I mainly plan on walking you through what it was like working for GSoC, what challenges I faced, and how I overcame those.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://viciouseagle03.github.io/images/GSoC_OA.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Google Summer of Code is a global, online program focused on bringing new contributors into open source software development. GSoC Contributors work with an open source organization on a 12+ week programming project under the guidance of mentors.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;discovering-gsoc-from-curiosity-to-decision&#34;&gt;Discovering GSoC: From Curiosity to Decision&lt;/h2&gt;&#xA;&lt;p&gt;I first came across Google Summer of Code (GSoC) during my early years at IIT Roorkee.&lt;/p&gt;&#xA;&lt;p&gt;The idea of working on real-world open source projects with guidance from experienced mentors worldwide piqued my interest.&#xA;For me it provided a unique chance to collaborate with an international community of developers, enhancing my skills in coding, problem-solving, and project management. I was amazed by the idea of jumping into a library that so many people were part of really got me excited. Getting to help out and knowing it would make a difference for loads of folks - it resonated with me :) . So, I went on a hunt for an organisation that matched my skills and also kept me engaged enough to persistently work on the project idea throughout the summers ☀️.&lt;/p&gt;&#xA;&lt;h2 id=&#34;proposal-a-daunting-task&#34;&gt;Proposal: A Daunting Task&lt;/h2&gt;&#xA;&lt;p&gt;Once I had chosen the organization and tackled some issues, opened a few pull requests, and familiarized myself with the codebase, the next step was to explore the idea list. Based on my interest, I chose NDCube (open-source SunPy affiliated package). I went through the tests and documentation to understand the NDCube package better and chose the &lt;strong&gt;Serialization of NDCube Classes to ASDF&lt;/strong&gt; project. Crafting the proposal was a challenge, I had to keep it concise, sticking to the recommended 5-page limit.  With the support of the SunPy mentors, who provided valuable feedback, I was able to refine my proposal to meet the standards expected by GSoC.&lt;/p&gt;&#xA;&lt;h2 id=&#34;the-ndcube-package&#34;&gt;The NDCube package&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://viciouseagle03.github.io/images/ndcube.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Let us understand what really is the ndcube package, it is a Python package used for managing multi-dimensional data in astronomy. In astronomy, data often comes in arrays with multiple dimensions, such as images or spectroscopic data cubes. Each element of the array represents a measurement taken at a specific point in space and time.&#xA;The challenge lies in managing the relationship between the array elements data and their corresponding physical locations in the observed sky. This is where the World Coordinate System (WCS) framework comes in. WCS provides a standardized way to relate array axes to physical coordinates(connects points in the image to their real locations in space).&lt;/p&gt;&#xA;&lt;p&gt;Now, imagine you have lots of pictures, each showing a different part of the sky or taken at a different time. It would be great if you could combine all these pictures into one big map, right? That&amp;rsquo;s where ndcube comes in. It&amp;rsquo;s like a tool that takes all these pictures and their coordinate information and puts them together in a way that makes them easy to work with.&lt;/p&gt;&#xA;&lt;p&gt;With ndcube, you can slice these pictures, zoom in on specific regions, or compare different pictures side by side. You can also transform the coordinates, which is like moving your map from one location to another or rotating it to see things from a different angle. And the best part is, ndcube does all this while keeping track of the complex coordinate transformations of data points. As ndcube puts it:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;The fundamental reason to opt for ndcube is to harness the astronomy-specific World Coordinate System (WCS).&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;the-waiting-game-from-submission-to-selection&#34;&gt;The Waiting Game: From Submission to Selection&lt;/h2&gt;&#xA;&lt;p&gt;After a month of anticipation, the long-awaited email arrived from the GSoC team: my proposal had been accepted by OpenAstronomy(The umbrella organization) 😁.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://viciouseagle03.github.io/images/Acceptance.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Getting into GSoC is super exciting and it marks the start of an amazing journey. I know it’s going to take a lot of hard work and dedication, but I’m really looking forward to the challenges ahead and most importantly, the incredible learning experience that GSoC brings.&lt;/p&gt;&#xA;&lt;p&gt;The mentors overseeing my project are &lt;a href=&#34;https://github.com/DanRyanIrish&#34;&gt;Daniel Ryan&lt;/a&gt;, &lt;a href=&#34;https://github.com/cadair&#34;&gt;Stuart Mumford&lt;/a&gt;, and &lt;a href=&#34;https://github.com/braingram&#34;&gt;Brett Graham&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;I plan on writing the next post within a week or two, documenting the progress I make in the project.&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>About Me</title>
      <link>https://viciouseagle03.github.io/about/</link>
      <pubDate>Thu, 16 May 2024 00:00:00 +0000</pubDate>
      <guid>https://viciouseagle03.github.io/about/</guid>
      <description>&lt;p&gt;I am a second-year undergraduate student at the &lt;a href=&#34;https://en.wikipedia.org/wiki/IIT_Roorkee&#34;&gt;&lt;em&gt;Indian Institute of Technology, Roorkee&lt;/em&gt;&lt;/a&gt;, majoring in Mathematics and Computing.&lt;/p&gt;&#xA;&lt;h2 id=&#34;how-is-the-blog-made&#34;&gt;How is the blog made?&lt;/h2&gt;&#xA;&lt;p&gt;The blog is created using &lt;a href=&#34;https://gohugo.io/&#34;&gt;&lt;strong&gt;Hugo&lt;/strong&gt;&lt;/a&gt;, a static site generator, and it&amp;rsquo;s styled with the &lt;a href=&#34;https://github.com/nanxiaobei/hugo-paper&#34;&gt;&lt;strong&gt;hugo-paper&lt;/strong&gt;&lt;/a&gt; theme.&lt;/p&gt;&#xA;&lt;h2 id=&#34;contact-information&#34;&gt;Contact Information&lt;/h2&gt;&#xA;&lt;p&gt;Reach me at &lt;a href=&#34;mailto:piyushsharma04321@gmail.com&#34;&gt;piyushsharma04321@gmail.com&lt;/a&gt;&lt;/p&gt;&#xA;</description>
    </item>
  </channel>
</rss>